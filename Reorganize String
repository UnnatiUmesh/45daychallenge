class Solution {
public:
    string reorganizeString(string s) {
       unordered_map<int,int> mp;
       priority_queue<pair<int,int>> pq;
        int idx=0;
        int n=s.size();
        
        string ans(n,' ');
        
        for(char ch:s)
            mp[ch-'a']++;
        
        for(auto x:mp)
            pq.push({x.second,x.first});
        
        while(!pq.empty())
        {
            int freq=pq.top().first;
            int node=pq.top().second;
            pq.pop();
            
            for (int i = 0; i < freq; ++i) {
                if (idx >= s.size()) { // If idx goes out of bounds, wrap to odd indices
                    idx = 1;
                }
                ans[idx] = 'a'+node; 
                idx += 2; // Move to the next even position
            }
            
        }
        if(ans.size()>1 && ans[0]==ans[1])
            return "";
        return ans;
    }
};
