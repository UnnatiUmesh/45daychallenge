/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        unordered_map<Node *,Node *> mp;
        Node *dummy=new Node(-1);
        Node *curr=dummy;
        
        Node *temp=head;
        
        while(temp!=NULL)
        {
            mp[temp]=new Node(temp->val);
            temp=temp->next;
        }
        
        Node *res=mp[head];
        temp=head;
        
        while(temp!=NULL)
        {
            if(temp->random==NULL)
                mp[temp]->random=NULL;
            else
                mp[temp]->random=mp[temp->random];
            
            if(temp->next==NULL)
                mp[temp]->next=NULL;
            else
                mp[temp]->next=mp[temp->next];
            temp=temp->next;
        }
        
        return res;
        
        
    }
};
