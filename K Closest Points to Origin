class Solution {
public:
    
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<pair<int,int>>pq;
        int n=points.size();
        
        vector<vector<int>> ans;
        for(int i=0;i<n;i++)
        {
            int sum=points[i][0]*points[i][0]+points[i][1]*points[i][1];
            if(pq.size()<k)
                pq.push({sum,i});
            
            else if(sum<pq.top().first)
            {
                pq.pop();
                pq.push({sum,i});
            }
         
        }
        
        while(!pq.empty())
        {
            int x=points[pq.top().second][0];
            int y=points[pq.top().second][1];
            pq.pop();
            
            ans.push_back({x,y});
        }
        return ans;
    }
};
