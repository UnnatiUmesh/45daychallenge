class Solution{
  public:
  //largest histogram reactangle
    int solve(vector<int> temp,int n)
    {
        vector<int> left(n),right(n);
        stack<int> st;
        int maxi=INT_MIN;
        
        left[0]=0;
        st.push(0);
        
        for(int i=1;i<n;i++)
        {
            while(!st.empty() && temp[i]<=temp[st.top()])
            st.pop();
            
            if(st.empty())
            left[i]=0;
            
            else
            left[i]=st.top()+1;
            
            st.push(i);
        }
        
        while(!st.empty())
        st.pop();
        
        right[n-1]=n-1;
        st.push(n-1);
        
        for(int i=n-2;i>=0;i--)
        {
         while(!st.empty() && temp[i]<=temp[st.top()])
            st.pop();
            
         if(st.empty())
         right[i]=n-1;
         
         else
         right[i]=st.top()-1;
         st.push(i);
        }
        
        for(int i=0;i<n;i++)
        {
            maxi=max(maxi,(right[i]-left[i]+1)*temp[i]);
        }
        return maxi;
    }
    int maxArea(int M[MAX][MAX], int n, int m) {
        // Your code here
        
        vector<int> temp(m,0);
        int maxi=INT_MIN;
        
        //in the grid combine each row such that :
        //if mat[i][j]==0 then put 0
        //else do cumulative sum
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(M[i][j]==0)
                temp[j]=0;
                
                else
                temp[j]+=1;
            }
            maxi=max(maxi,solve(temp,m));
        }
        return maxi;
    }
};
